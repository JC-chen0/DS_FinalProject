import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.HashMap;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public class ChildQuery 
{
	public String urlStr;
	
	public String content;
	
	public ChildQuery(String url) {
		this.urlStr=url;
		
	}
	
	private String fetchContent() throws IOException

	{
		String retVal = "";
		
		
		URL u = new URL(urlStr);

		URLConnection conn = u.openConnection();

		conn.setRequestProperty("User-agent", "Chrome/7.0.517.44");

		InputStream in = conn.getInputStream();

		InputStreamReader inReader = new InputStreamReader(in,"utf-8");

		BufferedReader bufReader = new BufferedReader(inReader);
		String line = null;

		while((line=bufReader.readLine())!=null)
		{
			retVal += line;

		}
		return retVal;
	}
	public ArrayList<String> query() throws IOException,FileNotFoundException

	{

		if(content==null)

		{

			content= fetchContent();
			System.out.println(content);
		}

		ArrayList<String> retVal = new ArrayList();
		
		Document doc = Jsoup.parse(content);
		System.out.println(doc.text());
		Elements selectsElements = doc.select("script");
		for(Element scriptElement : selectsElements) {
			scriptElement.remove();
		}
//		lis = lis.select(".ZINbbc");
		Elements links = doc.select("a");
		
		for(Element a : links) {
			try {
				
				String childUrl = a.attr("href");
//				String childTitle = a.select(".body").get(0).text();
//				String childArticle = a.select(".body").text();
//				System.out.println(childArticle);
				if(childUrl.contains("search")&&childUrl.contains("google")) {
					retVal.add(childUrl);
				}else {
					retVal.add(urlStr.substring(33)+childUrl);
				}
				
			}
			
			catch(IndexOutOfBoundsException e) {
				System.out.println("子網頁");
			}
			
		}
		
		
		
		return retVal;
	}
	
	
	
	
	
	
	
	
	
	
}
